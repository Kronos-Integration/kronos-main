#!/usr/bin/env node

/* jslint node: true, esnext: true */

"use strict";

const githubChangeRemoteFile = require('github-change-remote-file'),
  keychain = require('keychain');

const keystore = {
  account: "arlac77",
  service: 'github_token'
};

const user = 'Kronos-Integration';
const repo = 'kronos-adapter-outbound-http';

/*
keychain.setPassword({
  account: account,
  service: service,
  password: 'xxxxxx'
}, function (err, pass) {
  if (err) {
    console.log(`${err}`);
    return;
  }
  console.log('password set');
});
*/

keychain.getPassword(keystore, (err, pass) => {
  if (err) {
    console.log(`${err}`);
    return;
  }
  work(pass);
});


function work(token) {
  githubChangeRemoteFile({
    user: user,
    repo: repo,
    filename: 'package.json',
    transform: pkg => {
      pkg = JSON.parse(pkg);

      pkg.repository = {
        "type": "git",
        "url": `git+https://github.com/${user}/${repo}.git`
      };
      pkg.bugs = {
        "url": `https://github.com/${user}/${repo}/issues`
      };
      pkg.homepage = `https://github.com/${user}/${repo}#readme`;

      if (pkg.version === '0.0.0') {
        pkg.version = '0.0.0-semantic-release';
      }

      if (pkg.release && pkg.release.debug === false) {
        delete pkg.release;
      }

      pkg.devDependencies['semantic-release'] = '6.2.0';
      pkg.devDependencies['chai'] = '3.5.0';
      pkg.devDependencies['mocha'] = '2.4.5';
      pkg.devDependencies['jsdoc'] = '3.4.0';
      pkg.devDependencies['istanbul'] = '0.4.2';
      pkg.devDependencies['cz-conventional-changelog'] = '1.1.5';

      pkg.scripts['semantic-release'] = "semantic-release pre && npm publish && semantic-release post";
      pkg.scripts['doc'] = "jsdoc lib/*.js";
      pkg.scripts['test'] = "mocha tests/*_test.js";
      pkg.scripts['cover'] =
        "node ./node_modules/istanbul/lib/cli.js cover --hook-run-in-context ./node_modules/mocha/bin/_mocha -- --R spec --U exports tests/*_test.js";

      pkg.engines = {
        node: ">=5"
      };

      pkg.license = "BSD-2-Clause";

      if (pkg.keywords === undefined) {
        pkg.keywords = [];
      }

      if (pkg.name.match(/^kronos-interceptor.+/)) {
        if (!pkg.keywords.find(k => k === 'kronos-interceptor')) {
          pkg.keywords.push('kronos-interceptor');
        }
      }
      if (pkg.name.match(/^kronos-step.+/) || pkg.name.match(/^kronos-adapter.+/)) {
        if (!pkg.keywords.find(k => k === 'kronos-step')) {
          pkg.keywords.push('kronos-step');
        }
      }
      if (pkg.name.match(/^kronos-service.+/) && !pkg.name.match(/^kronos-service-manager/)) {
        if (!pkg.keywords.find(k => k === 'kronos-service')) {
          pkg.keywords.push('kronos-service');
        }
      }

      if (pkg.config === undefined) {
        pkg.config = {};
      }
      pkg.config.commitizen = {
        "path": "./node_modules/cz-conventional-changelog"
      };

      return JSON.stringify(pkg, undefined, 2);
    },
    token: token,
    pr: {
      title: 'chore(npm): sync package.json from npm-package-template',
      body: 'engines, version, release scripts for semantic-release, mocha, jsdoc and istanbul'
    }
  }, (err, res) => {
    if (err) {
      console.log(err);
    } else {
      console.log(res.html_url);
    }
  });
}
