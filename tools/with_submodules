#!/usr/bin/env bash


for i in $(git submodule foreach --quiet 'echo $path')
do
  (
  cd $i
  grep '"mocha": "2."' package.json >/dev/null
  if [ $? -eq 1 ]; then
    echo $i
    npm install --save-dev --save-exact mocha@3.0.0
    git add package.json
    git commit -m 'chore(dependency): mocha@3.0.0'
    git push
  fi
)
done

exit
---
cd $i
grep '"mocha": "2."' package.json >/dev/null
if [ $? -eq 1 ]; then
  echo $i
  npm install --save-dev --save-exact mocha@3.0.0
  git add package.json
  git commit -m 'chore(dependency): mocha@3.0.0'
  git push
fi
---
git pull
sed -i '' 's/  - 6.[012].*/  - 6.2/' .travis.yml
git add .travis.yml
git commit -m 'chore(travis): build with node 6.3.1'
git push

---
greenkeeper enable
---
gitcleen
---
rm -rf node_modules
npm install

---
grep '"semantic-release": "6.3.0"' package.json >/dev/null
if [ $? -eq 1 ]; then
  echo $i
  grep '"semantic-release": "6.2' package.json >/dev/null
  if [ $? -eq 0 ]; then
    npm install --save-dev --save-exact semantic-release@6.3.0
    git add package.json
    git commit -m 'chore(dependency): semantic-release@6.3.0'
    git push
  else
    echo "*** check $i"
  fi
fi
---
( cd $i
sed -i '' 's/  - 6.[012].*/  - 6.2.1/' .travis.yml
git add .travis.yml
git commit -m 'chore(travis): build with node 6.2.1'
git push
)
---
perl -i -pe 's/^\[\!\[Coverage\s+Status.*\n$//' README.md
git add README.md
git commit -m 'doc(readme): remove coveralls'
---
perl -i -pe 's/^.*coveralls.js\n$//' .travis.yml
git add .travis.yml
git commit -m 'chore(travis): remove coveralls'
---
