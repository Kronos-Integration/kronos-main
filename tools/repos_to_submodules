#!/usr/bin/env node

"use strict";

const //GitHubApi = require("node-github"),
  Octokat = require('octokat'),
  keychain = require('keychain'),
  spawn = require('child_process').spawnSync;

/*
var github = new GitHubApi({
  version: "3.0.0",
  debug: false
});
*/

let account = "arlac77";
let org = "Kronos-Integration";
let org_id = "14301944";
let team_id = "1765081";

keychain.getPassword({
  account: account,
  service: 'github.com',
  type: 'internet'
}, function (err, pass) {
  if (err) {
    console.log(`${err}`);
    return;
  }

  var octo = new Octokat({
    username: account,
    password: pass
  });

  work(octo);
});


function work(octo) {

  octo.orgs(org).fetch().then(o => {
    console.log(`fetch: ${JSON.stringify(o)}`);
  });
}

/*
octo.orgs(org).fetch().then(o => {
  console.log(`fetch: ${JSON.stringify(o)}`);
});
*/



/*
  github.orgs.getTeamRepos({
    id: team_id,
    per_page: 5
  }, function (err, res) {
    if (err) {
      console.log(err);
      return;
    }

    res.forEach(r => {
      if (r.name === 'kronos-main') {
        return;
      }
      console.log(`${r.clone_url}`);

      let git_submodule_add = spawn('git', ['submodule', 'add', r.clone_url]);
      git_submodule_add.on('close', function (code, signal) {
        console.log('child process terminated due to receipt of signal ' + signal);
      });
    });
    //console.log(`res: ${JSON.stringify(res,undefined,2)}`);
  });
*/
